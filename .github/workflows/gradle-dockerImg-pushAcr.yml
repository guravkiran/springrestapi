# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package Build the Container Image and push it to Azure Container Registry

on:
  push:
    branches: 
      [ trial ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout to the branch
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: maven build, clean
      run: |
          mvn clean package -DskipTests

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.SPRINGRESTAPI_AZURE_CLIENT_ID }}
          password: ${{ secrets.SPRINGRESTAPI_AZURE_SECRET }}

    - name: Build the Container Image and push it to Azure Container Registry
      uses: docker/build-push-action@v5
      with:
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/springrestapi:${{ github.sha }}
          file: springrestapi/Dockerfile
